@model CustomerPanel.Models.ProductPropertyViewModel
@{
    
}
<script src="~/assets/pages-js/"></script>

<h2>Ürün Özellikleri</h2>
<br />
<button type="button" class="btn btn-success" data-bs-toggle="modal" onclick="getproductProperties(1)" data-bs-target="#createModal">Yeni Ürün Özelliği Ekle</button>
<table class="table table-hover mt-3">
    <thead>
        <tr>
            <th class="d-none">Id</th>
            <th>Ürün</th>
            <th>Ürün Özelliği</th>
        </tr>
    </thead>
    <tbody id="productPropertyTableBody" class="table-border-bottom-0">
        @foreach (var item in Model.ProductProperties)
        {
            <tr>
                <td class="d-none">@item.Id</td>
                <td>@item.Product.Name</td>
                <td>@item.Property.Key - @item.Property.Value</td>
                <td>
                    <div class="dropdown">
                        <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                            <i class="bx bx-dots-vertical-rounded"></i>
                        </button>
                        <div class="dropdown-menu">
                            <a onclick="getproductPropertyById(@item.Id)" data-bs-toggle="modal" data-bs-target="#updateModal" class="dropdown-item"><i class="bx bx-edit-alt me-1"></i> Güncelle</a>
                            <a onclick="deleteproductProperty(@item.Id)" class="dropdown-item"><i class="bx bx-trash me-1"></i> Sil</a>
                        </div>
                    </div>
                </td>
            </tr>
        }


    </tbody>
</table>

<!-- Modal -->
<div class="modal fade" id="updateModal" tabindex="-1" aria-labelledby="updateModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateModalLabel">Ürün Özelliği</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="mb-3 d-none">
                        <label for="recipient-name" class="col-form-label">ID:</label>
                        <input type="text" class="form-control" id="id">
                    </div>
                    <div id="upChooseProduct" class="mb-3">
                        <select class="form-select" aria-label="Default select example" id="upProductId">
                            <option selected>Ürün seçiniz</option>
                            @foreach (var item in Model.Products)
                            {
                                <option value="@item.Id">@item.Name</option>
                            }
                        </select>
                    </div>
                    <div id="upChooseProperty" class="mb-3">
                        <select class="form-select" aria-label="Default select example" id="upPropertyId">
                            <option selected>Ürün Özelliği seçiniz</option>
                            @foreach (var item in Model.Properties)
                            {
                                <option value="@item.Id">@item.Key - @item.Value</option>
                            }
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                <button onclick="updateproductProperty()" type="button" class="btn btn-primary">Güncelle</button>
            </div>
        </div>
    </div>
</div>



<div class="modal" id="createModal" tabindex="-1" aria-labelledby="createModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createModalLabel">Ürün Özelliği</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                    <div id="chooseProduct" class="mb-3">
                        <label for="recipient-name" class="col-form-label">Sıralama Numarası:</label>
                        <select class="form-select" aria-label="Default select example" id="productId">
                            <option selected>Ürün seçiniz</option>
                            @foreach (var item in Model.Products)
                            {
                                <option value="@item.Id">@item.Name</option>
                            }
                        </select>
                    </div>
                    <div id="chooseProperty" class="mb-3">
                        <label for="recipient-name" class="col-form-label">Sıralama Numarası:</label>
                        <select class="form-select" aria-label="Default select example" id="propertyId">
                            <option selected>Ürün Özelliği seçiniz</option>
                            @foreach (var item in Model.Properties)
                            {
                                <option value="@item.Id">@item.Key - @item.Value</option>
                            }
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                <button onclick="createproductProperty()" type="button" class="btn btn-primary">Ekle</button>
            </div>
        </div>
    </div>
</div>

<script>

    function createproductProperty() {
        
        var productId = parseInt($("#productId").val());
        var propertyId = parseInt($("#propertyId").val());

        $.ajax({
            url: '@Url.Action("CreateProductProperty", "ProductProperty")',
            type: 'POST',
            dataType: 'json',
            data: {
                "_productId": productId,
                "_propertyId": propertyId
            },
            success: function (data) {
                if (data) {
                    $(function () {
                        $('#createModal').modal('toggle');
                    });
                    Swal.fire({
                        title: "Başarılı!",
                        text: "Ürün Özelliği başarıyla eklendi.",
                        icon: "success"
                    });
                    updateTable();
                }
                else {
                    $(function () {
                        $('#createModal').modal('toggle');
                    });
                    Swal.fire({
                        title: "Hata!",
                        text: "Bir şeyler ters gitti lütfen tekrar deneyiniz!",
                        icon: "error"
                    });

                    return;
                }
            }
        });
    }

    function deleteproductProperty(_id) {
        var text = "";
        text = "Seçtiğiniz Ürün Özelliği silinecektir. Onaylıyor musunuz?";

        Swal.fire({
            title: text,
            text: "Bunu geri alamazsınız!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Evet, sil!",
            cancelButtonText: "Kapat"
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '@Url.Action("DeleteProductProperty", "ProductProperty")',
                    type: 'POST',
                    dataType: 'json',
                    data: {
                        "_id": _id
                    },
                    success: function (data) {
                        if (data) {
                            Swal.fire({
                                title: "Silindi!",
                                text: "Ürün Özelliği başarıyla silindi.",
                                icon: "success"
                            });
                            updateTable();
                        }
                        else {
                            $(function () {
                                $('#modal').modal('toggle');
                            });
                            Swal.fire({
                                title: "Hata!",
                                text: "Bir şeyler ters gitti lütfen tekrar deneyiniz!",
                                icon: "error"
                            });

                            return;
                        }
                    }
                });
            }
        });

    }

    //function getproductProperties(productId, propertyId) {

    //    $.ajax({
    //        url: '@Url.Action("UpdateTable", "ProductProperty")',
    //        type: 'POST',
    //        dataType: 'json',
    //        success: function (data) {
    //            if (data) {

    //                //if (val === 1) {
    //                //    $("#productProperty").empty();
    //                //    var trHtml = "";
    //                //    for (var item of data) {
    //                //        trHtml += '<option value="' + item.id + '">' + item.name + '</option>';
    //                //    }
    //                //    $("#productProperty").append(trHtml);
    //                //}
    //                //if (val === 2 && mainproductPropertyId !== null) {
    //                //    $("#upMainproductPropertyId").empty();
    //                //    var trHtml = "";
    //                //    for (var item of data) {
    //                //        if (item.id === mainproductPropertyId)
    //                //            trHtml += '<option selected value="' + item.id + '">' + item.name + '</option>';
    //                //        else
    //                //            trHtml += '<option value="' + item.id + '">' + item.name + '</option>';

    //                //    }
    //                //    $("#upMainproductPropertyId").append(trHtml);
    //                //}
    //            }
    //            else {

    //                Swal.fire({
    //                    title: "Hata!",
    //                    text: "Bir şeyler ters gitti lütfen tekrar deneyiniz!",
    //                    icon: "error"
    //                });

    //                return;
    //            }
    //        }
    //    });
    //}

    //function getproductPropertyById(_id) {
    //    $.ajax({
    //        url: '@Url.Action("GetproductPropertyById", "productProperty")',
    //        type: 'POST',
    //        dataType: 'json',
    //        data: {
    //            "_id": _id
    //        },
    //        success: function (data) {
    //            if (data) {
    //                $("#id").val(data.id);
    //                $("#upproductPropertyName").val(data.name);
    //                if (data.parentproductPropertyId != 0) {
    //                    $("#upSubCatCheck").prop("checked", true);
    //                    getproductProperties(2, data.parentproductPropertyId);
    //                    $("#upChooseMainCat").removeClass("d-none");
    //                }
    //                else {
    //                    $("#upSubCatCheck").prop("checked", false);
    //                    $("#upChooseMainCat").addClass("d-none");
    //                }
    //            }
    //            else {
    //                $(function () {
    //                    $('#modal').modal('toggle');
    //                });
    //                Swal.fire({
    //                    title: "Hata!",
    //                    text: "Bir şeyler ters gitti lütfen tekrar deneyiniz!",
    //                    icon: "error"
    //                });

    //                return;
    //            }
    //        }
    //    });
    //}

    function updateproductProperty() {
        var id = $("#id").val();
        var productId = parseInt($("#productId").val());
        var propertyId = parseInt($("#propertyId").val());

        $.ajax({
            url: '@Url.Action("UpdateProductProperty", "ProductProperty")',
            type: 'POST',
            dataType: 'json',
            data: {
                "_id": id,
                "_productId": productId,
                "_propertyId": propertyId,

            },
            success: function (data) {
                if (data) {
                    $(function () {
                        $('#updateModal').modal('toggle');
                    });
                    Swal.fire({
                        title: "Başarılı!",
                        text: "Ürün Özelliği başarıyla güncellendi.",
                        icon: "success"
                    });
                    updateTable();
                }
                else {
                    $(function () {
                        $('#updateModal').modal('toggle');
                    });
                    Swal.fire({
                        title: "Hata!",
                        text: "Bir şeyler ters gitti lütfen tekrar deneyiniz!",
                        icon: "error"
                    });

                    return;
                }
            }
        });
    }

    function updateTable() {
        $.ajax({
            url: '@Url.Action("UpdateTable", "ProductProperty")',
            type: 'POST',
            dataType: 'json',
            success: function (data) {
                console.log(data);
                if (data) {
                    $("#productPropertyTableBody").empty();
                    var trHtml = "";
                    var subSelectHtml = "";
                    var subSelectHtmlProp = "";
                    for (var item of data.productProperties) {
                        trHtml += '<tr>';
                        trHtml += '    <td class="d-none"> ' + item.id + '</td>';
                        trHtml += '        <td> ' + item.product.name + '</td>'
                        trHtml += '        <td> ' + item.property.key + ' - ' + item.property.value + '</td>'
                        trHtml += '        <td>'
                        trHtml += '        <div class="dropdown" >'
                        trHtml += '            <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">'
                        trHtml += '                <i class="bx bx-dots-vertical-rounded" > </i>'
                        trHtml += '            </button>'
                        trHtml += '            <div class="dropdown-menu">'
                        trHtml += '                 <a onclick="getproductPropertyById(' + item.id + ')" data-bs-toggle="modal" data-bs-target="#updateModal" class="dropdown-item" > <i class="bx bx-edit-alt me-1"> </i>Edit</a>'
                        trHtml += '                 <a onclick="deleteproductProperty(' + item.id + ')" class="dropdown-item" > <i class="bx bx-trash me-1" > </i> Delete</a>'
                        trHtml += '            </div>'
                        trHtml += '        </div>'
                        trHtml += '     </td>'
                        trHtml += '</tr>';

                        $("#productId").empty();
                        $("#propertyId").empty();
                        $("#upProductId").empty();
                        $("#upPropertyId").empty();
                        
                        
                    }

                    for(var item of data.products) {
                        subSelectHtml += '<option value="' + item.id + '">' + item.name + '</option>';
                    }
                    for(var item of data.properties) {
                        subSelectHtmlProp += '<option value="' + item.id + '">' + item.key + ' - ' + item.value + '</option>';
                    }

                    $("#productPropertyTableBody").append(trHtml);
                    $("#productId").append(subSelectHtml);
                    $("#upProductId").append(subSelectHtml);
                    $("#propertyId").append(subSelectHtmlProp);
                    $("#upPropertyId").append(subSelectHtmlProp);

                }
                else {
                    Swal.fire({
                        title: "Hata!",
                        text: "Tablo yüklenirken bir şeyler ters gitti lütfen tekrar deneyiniz!",
                        icon: "error"
                    });

                    return;
                }
            }
        });
    }


</script>